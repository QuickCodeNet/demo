name: Gateway - Build and Deploy

on:
  workflow_call:
        
env:
  PROJECT_ID: main-quickcode 
  GAR_LOCATION: europe-west1 
  SERVICE: demo-gateway 
  REGION: europe-west1 
  REPO: main-quickcode-docker-repo
  WIF_PROVIDER: ${{ secrets.WIF_PROVIDER }}
  WIF_SERVICE_ACCOUNT: ${{ secrets.WIF_SERVICE_ACCOUNT }}
  QUICKCODE_SESSION_ID: ${{ secrets.QUICKCODE_SESSION_ID }}
  BUILD_AND_PUSH_CONTAINER_SECRET: ${{ secrets.BUILD_AND_PUSH_CONTAINER_GATEWAY }}
  DEPLOY_TO_CLOUD_RUN_SECRET: ${{ secrets.DEPLOY_TO_CLOUD_RUN_GATEWAY }}
  ELASTIC_CONNECTION_STRING: ${{ secrets.QUICKCODE_GATEWAY_ELASTIC }}
  DOCKER_IMAGE_NAME: 'demo_gateway_'
  DOCKER_REPO_NAME: portal
  DOCKER_FILE_PATH: 'src/Presentation/QuickCode.Demo.Gateway/'

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - '.github/**'
              - 'src/Common/**'
              - 'src/Presentation/QuickCode.Demo.Gateway/**'

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ env.WIF_PROVIDER }}' 
          service_account: '${{ env.WIF_SERVICE_ACCOUNT }}' 
          
      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          
      - name: Build and Push Container Started
        if: always()
        uses: nick-fields/retry@v2
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.BUILD_AND_PUSH_CONTAINER_SECRET }}&sessionId=${{env.QUICKCODE_SESSION_ID}}&isCompleted=false&message=InProgress'
          max_attempts: 3
          timeout_minutes: 2

      - name: Build and Push Container
        id: build
        if: steps.changes.outputs.src == 'true'
        continue-on-error: true
        run: |-
          docker buildx build \
            --file ${{ env.DOCKER_FILE_PATH }}Dockerfile \
            -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.DOCKER_REPO_NAME }}:${{ env.DOCKER_IMAGE_NAME }}${{ github.sha }}" \
            --push \
            ./
          
      - name: Build and Push Container Finished
        if: always()
        uses: nick-fields/retry@v2
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.BUILD_AND_PUSH_CONTAINER_SECRET }}&sessionId=${{env.QUICKCODE_SESSION_ID}}&isCompleted=true&message=Completed'
          max_attempts: 3
          timeout_minutes: 2
          
      - name: Deploy to Cloud Run Started
        if: always()
        uses: nick-fields/retry@v2
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.DEPLOY_TO_CLOUD_RUN_SECRET }}&sessionId=${{env.QUICKCODE_SESSION_ID}}&isCompleted=false&message=InProgress' 
          max_attempts: 3
          timeout_minutes: 2
          
      - name: Deploy to Cloud Run
        id: deploy
        if: steps.build.outcome == 'success'
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          env_vars: |
            ASPNETCORE_ENVIRONMENT=CloudRun 
            ASPNETCORE_URLS=http://+
            ELASTIC_CONNECTION_STRING=${{env.ELASTIC_CONNECTION_STRING}}
            DOTNET_SYSTEM_NET_HTTP_SOCKETSHTTPHANDLER_HTTP3SUPPORT=false 
            QUICKCODE_USER_MANAGER_MODULE_API_KEY=${{secrets.QUICKCODE_USER_MANAGER_MODULE_API_KEY}}
            QUICKCODE_APARTMENT_MANAGE_MODULE_API_KEY=${{secrets.QUICKCODE_APARTMENT_MANAGE_MODULE_API_KEY}}
            QUICKCODE_EMAIL_MANAGER_MODULE_API_KEY=${{secrets.QUICKCODE_EMAIL_MANAGER_MODULE_API_KEY}}
            QUICKCODE_SMS_MANAGER_MODULE_API_KEY=${{secrets.QUICKCODE_SMS_MANAGER_MODULE_API_KEY}}
            QUICKCODE_EMAIL_SENDER_MODULE_API_KEY=${{secrets.QUICKCODE_EMAIL_SENDER_MODULE_API_KEY}}

          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.DOCKER_REPO_NAME }}:${{ env.DOCKER_IMAGE_NAME }}${{ github.sha }}
          flags: |
            --port=80
            --allow-unauthenticated
      - name: Deploy to Cloud Run Finished
        if: always()
        uses: nick-fields/retry@v2
        with:
          command: curl 'https://api.quickcode.net/api/GenerateSite/UpdateGeneratorAction?actionId=${{ env.DEPLOY_TO_CLOUD_RUN_SECRET }}&sessionId=${{env.QUICKCODE_SESSION_ID}}&isCompleted=true&message=${{ steps.deploy.outputs.url }}' 
          max_attempts: 3
          timeout_minutes: 2
          
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}





