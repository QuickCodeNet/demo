Enum HttpMethodType {
  GET [note: "Fetch"]
  POST [note: "Create"]
  PUT [note: "Update"]
  DELETE [note: "Remove"]
  PATCH [note: "Modify"]
}

Table "PortalMenu" {
  "Key" varchar(1000) [pk, not null]
  "Name" varchar(250) [not null]
  "Text" varchar(250) [not null]
  "Tooltip" varchar(250) [not null]
  "ActionName" varchar(250) [not null]
  "OrderNo" int [not null]
  "ParentName" varchar(250) 
}

Table "ColumnTypes" {
  "Id" int [pk, not null, increment]
  "TypeName" varchar(250)
  "IosComponentName" varchar(250)
  "IosType" varchar(250)
  "IconCode" varchar(250)
}

Table "TopicWorkflows" {
  "Id" int [pk, not null, increment]
  "KafkaEventsTopicName" varchar(1000) [not null]
  "WorkflowContent" yaml [not null]
  Note: 'Query:GET_WORKFLOWS[] Where:KafkaEventsTopicName'
  Note: 'Query:GET_WORKFLOWS2[] Where:KafkaEventsTopicName'
  Note: 'Query:GET_TOPIC_WORKFLOWS[] Tables:TopicWorkflows T, KafkaEvents K, ApiMethodDefinitions A Where:K.IsActive[Equals|true], K.TopicName, A.HttpMethod  Select:T.*'
}

Table "KafkaEvents" {
  "TopicName" varchar(1000) [pk, not null]
  "ApiMethodDefinitionKey" varchar(1000) [not null]
  "IsActive" boolean [not null, default: '((0))']
  Note: 'Query:GET_KAFKA_EVENTS[] Tables:KafkaEvents K, ApiMethodDefinitions A Select:K.*, A.HttpMethod, A.ControllerName, A.UrlPath '
  Note: 'Query:GET_ACTIVE_KAFKA_EVENTS[] Tables:KafkaEvents K, ApiMethodDefinitions A Where:K.IsActive[Equals|true] Select:K.*, A.HttpMethod, A.ControllerName, A.UrlPath '
  Note: 'Query:GET_TOPIC_WORKFLOWS[] Tables:TopicWorkflows T, KafkaEvents K, ApiMethodDefinitions A Where:K.IsActive[Equals|true], K.TopicName, A.HttpMethod  Select:T.*'
}

Table "PermissionGroups" {
  "Name" varchar(1000) [pk, not null]
  "Description" varchar(1000) [not null]
}

Table "PortalPermissionTypes" {
  "Id" int [pk, not null]
  "Name" varchar(100) [not null]
  "Description" varchar(1000) [not null]
}

Table "PortalPermissions" {
  "Name" varchar(1000) [pk, not null]
  "Description" varchar(1000) [not null]
}

Table "PortalPermissionGroups" {
  "PortalPermissionName" varchar(1000) [pk, not null]
  "PermissionGroupName" varchar(1000) [pk, not null]
  "PortalPermissionTypeId" int [pk, not null]
  "IsActive" boolean [not null, default: '((0))']
  Note: 'Query:GET_PORTAL_PERMISSION_GROUPS[] Where:PermissionGroupName, IsActive[Equals|true]'
  Note: 'Query:GET_PORTAL_PERMISSION_GROUP[] Where:PortalPermissionName, PermissionGroupName, PortalPermissionTypeId, IsActive[Equals|true]'
}

Table "ApiPermissionGroups" {
  "PermissionGroupName" varchar(1000) [pk, not null]
  "ApiMethodDefinitionKey" varchar(1000) [pk, not null]
  "IsActive" boolean [not null, default: '((0))']
  Note: 'Query:GET_API_PERMISSION_GROUP_NAMES[] Where:PermissionGroupName, IsActive[Equals|true]'
}

Table "ApiMethodDefinitions" {
  "Key" varchar(1000) [pk, not null]
  "HttpMethod" HttpMethodType [not null]
  "ControllerName" varchar(1000) [not null]
  "UrlPath" varchar(250) [not null]
}

Table "TableComboboxSettings" {
  "TableName" varchar(250) [pk, not null]
  "IdColumn" varchar(250)
  "TextColumns" varchar(max)
  "StringFormat" varchar(max)
}

Table "AspNetRoles" {
  "Id" nvarchar(450) [pk, not null]
  "Name" nvarchar(256)
  "NormalizedName" nvarchar(256) [null]
  "ConcurrencyStamp" nvarchar(MAX) [null]
}

Table "AspNetUsers" {
  "Id" nvarchar(450) [pk, not null]
  "FirstName" nvarchar(200) [null]
  "LastName" nvarchar(200) [null]
  "PermissionGroupName" varchar(1000) [not null]
  "UserName" nvarchar(256) [null]
  "NormalizedUserName" nvarchar(256) [null]
  "Email" nvarchar(256) [null]
  "NormalizedEmail" nvarchar(256) [null]
  "EmailConfirmed" bit [not null]
  "PasswordHash" nvarchar(MAX) [null]
  "SecurityStamp" nvarchar(MAX) [null]
  "ConcurrencyStamp" nvarchar(MAX) [null]
  "PhoneNumber" nvarchar(MAX) [null]
  "PhoneNumberConfirmed" bit [not null]
  "TwoFactorEnabled" bit [not null]
  "LockoutEnd" datetimeoffset [null]
  "LockoutEnabled" bit [not null]
  "AccessFailedCount" int [not null]
  Note: 'Query:GET_USER[1] Where:Email'
}

Table "RefreshTokens" {
  "Id" int [pk, increment, not null]
  "UserId" nvarchar(450) [not null]
  "Token" nvarchar(500) [not null]
  "ExpiryDate" datetime [not null]
  "CreatedDate" datetime [not null, default: '(getdate())']
  "IsRevoked" boolean [not null, default: '((0))']
  Note: 'Query:GET_REFRESH_TOKEN[1] Where:Token, IsRevoked[Equals|false], ExpiryDate[>|Now]'
  Note: 'Command:UPDATE_REFRESH_TOKENS Where:Token[Equals] Set: IsRevoked[true]'
}

Table "AspNetRoleClaims" {
  "Id" int [pk, not null, increment]
  "RoleId" nvarchar(450) [not null]
  "ClaimType" nvarchar(MAX) [null]
  "ClaimValue" nvarchar(MAX) [null]
}

Table "AspNetUserClaims" {
  "Id" int [pk, not null, increment]
  "UserId" nvarchar(450) [not null]
  "ClaimType" nvarchar(MAX) [null]
  "ClaimValue" nvarchar(MAX) [null]
}

Table "AspNetUserLogins" {
  "LoginProvider" nvarchar(450) [pk, not null]
  "ProviderKey" nvarchar(450) [pk, not null]
  "ProviderDisplayName" nvarchar(MAX) [null]
  "UserId" nvarchar(450) [not null] 
}

Table "AspNetUserRoles" {
  "UserId" nvarchar(450) [pk, not null]
  "RoleId" nvarchar(450) [pk, not null]
}

Table "AspNetUserTokens" {
  "UserId" nvarchar(450) [pk, not null]
  "LoginProvider" nvarchar(450) [not null]
  "Name" nvarchar(450) [not null]
  "Value" nvarchar(MAX) [null]
}

Ref: "AspNetUsers"."Id" < "AspNetUserRoles"."UserId"
Ref: "AspNetUsers"."Id" < "AspNetUserClaims"."UserId"
Ref: "AspNetUsers"."Id" < "AspNetUserTokens"."UserId"
Ref: "AspNetRoles"."Id" < "AspNetUserRoles"."RoleId"
Ref: "AspNetRoles"."Id" < "AspNetRoleClaims"."RoleId"
Ref: "AspNetUsers"."Id" < "AspNetUserLogins"."UserId"
Ref: "PermissionGroups"."Name" < "AspNetUsers"."PermissionGroupName"
Ref: "PortalPermissionTypes"."Id" < "PortalPermissionGroups"."PortalPermissionTypeId"
Ref: "PortalPermissions"."Name" < "PortalPermissionGroups"."PortalPermissionName"
Ref: "ApiMethodDefinitions"."Key" < "KafkaEvents"."ApiMethodDefinitionKey"
Ref: "ApiMethodDefinitions"."Key" < "ApiPermissionGroups"."ApiMethodDefinitionKey"
Ref: "PortalPermissionGroups"."PermissionGroupName" > "PermissionGroups"."Name"
Ref: "ApiPermissionGroups"."PermissionGroupName" > "PermissionGroups"."Name"
Ref: "RefreshTokens"."UserId" > "AspNetUsers"."Id"
Ref: "TopicWorkflows"."KafkaEventsTopicName" > "KafkaEvents"."TopicName"