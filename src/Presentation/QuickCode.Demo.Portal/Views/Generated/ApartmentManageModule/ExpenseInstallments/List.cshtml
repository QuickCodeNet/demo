@using QuickCode.Demo.Portal.Models.ApartmentManageModule
@model ApartmentManageModule.ExpenseInstallmentData
@{
    string title =  "ApartmentManageModule.ExpenseInstallment List".SplitCamelCaseToString();
    string headerKey = "Header";
    TempData["Title"] = title;
    int startIndex = ((Model.CurrentPage - 1) * Model.PageSize) + 1;
    int endIndex = ((Model.CurrentPage ) * Model.PageSize);
    if (endIndex > Model.NumberOfRecord) {
        endIndex = Model.NumberOfRecord;
    }

    var pagerData = new PagerData() { CurrentPage = Model.CurrentPage, NumberOfRecord = Model.NumberOfRecord, PageSize = Model.PageSize, TotalPage = Model.TotalPage, StartIndex = startIndex, EndIndex = endIndex } ;
}
<div class="container-fluid" IsPageAvailable="true">
    <form method="post" id="formList">
        <div class="card text shadow mb-4">
            
            <div class="card-body">
                <h1 class="card-title">@title</h1>
                <p class="card-text">You can manage your ApartmentManageModule.ExpenseInstallment table.</p>
                <vc:insert-button controller-name="" action-name=""></vc:insert-button>
                <hr class="col-xs-12">
                 @if (Model.List.Count == 0)
                {
                    <div class="alert alert-danger" role="alert">
                        No Data available in ApartmentManageModule.ExpenseInstallment table.
                    </div>
                }
                else
                {
                    <vc:pager pager-data=pagerData></vc:pager>
                    <table bc-border="Bordered" bc-striped="true" bc-hover="true" class="table-responsive" bc-theme="Light">
                        <thead bc-theme="Dark">
                            <tr>
                               <vc:operation-buttons item-id=@headerKey controller-name="" action-name=""></vc:operation-buttons>
                               <th>Id</th>
<th>Site Id</th>
<th>Apartment Id</th>
<th>Expense Id</th>
<th>Installment Number</th>
<th>Total Installments</th>
<th>Installment Amount</th>
<th>Due Date</th>
<th>Paid</th>
<th>Paid At</th>
<th>Payment Type Id</th>
<th>Created Date</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.List)
                            {
                            <tr>
                                <vc:operation-buttons item-id=@item.GetKey() controller-name="" action-name=""></vc:operation-buttons>
                                <td>@item.Id</td>
<td>			@string.Format("{0}", Model.GetComboBoxValue("Sites", item.SiteId))</td>
<td>			@string.Format("{0}", Model.GetComboBoxValue("Apartments", item.ApartmentId))</td>
<td>			@string.Format("{0}", Model.GetComboBoxValue("CommonExpenses", item.ExpenseId))</td>
<td>@item.InstallmentNumber</td>
<td>@item.TotalInstallments</td>
<td>@item.InstallmentAmount</td>
<td>@item.DueDate</td>
<td><div style="margin-left:-20px;">
@if (@item.Paid == true)                                                                                                            
{                                                                                                                                      
	<input type="checkbox" onchange="checkBoxChanged(this);" id=@string.Format($"cbox_item.Paid") checked disabled       
	data-toggle="toggle" data-on="<i class='fa fa-check'></i>" data-off="<i class='fa fa-times'></i>"                            
	data-onstyle="primary" data-offstyle="danger" data-style="ios" value=@item.Paid />                                        
}                                                                                                                                      
else                                                                                                                                   
{                                                                                                                                      
	<input type="checkbox" onchange="checkBoxChanged(this);" id=@string.Format($"cbox_item_Paid") disabled               
	data-toggle="toggle" data-on="<i class='fa fa-check'></i>" data-off="<i class='fa fa-times'></i>"                            
	data-onstyle="primary" data-offstyle="danger" data-style="ios" value=@item.Paid />                                        
}
</div>
</td>
<td>@item.PaidAt</td>
<td>			@string.Format("{0}", Model.GetComboBoxValue("PaymentTypes", item.PaymentTypeId))</td>
<td>@item.CreatedDate</td>

                               </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
            @if (Model.List.Count > 0)
            {
            <div class="card-footer text-muted">
                 <vc:pager pager-data=pagerData></vc:pager>
            </div>
            }
        </div>
        <input type="hidden" asp-for="CurrentPage" />
        <input type="hidden" asp-for="SelectedKey" />
    </form>

    <div class="modal fade bd-example-modal-lg" id="itemDetailsModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document" id="itemDetailsContainer">
        </div>
    </div>
    
</div>
<div class="container-fluid" IsPageAvailable="false">
 @await Html.PartialAsync("_NotAuthorized")
</div>

<script type="text/javascript">
    window.addEventListener('load', (event) => {
     $("img.lazyload").lazyload();
    });
</script>

