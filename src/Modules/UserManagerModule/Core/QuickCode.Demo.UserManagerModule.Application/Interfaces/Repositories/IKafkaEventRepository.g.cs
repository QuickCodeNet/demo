//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by QuickCode. 
// Runtime Version:1.0
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Data.SqlClient;
using QuickCode.Demo.Common.Models;
using QuickCode.Demo.UserManagerModule.Domain.Entities;
using QuickCode.Demo.UserManagerModule.Application.Dtos.KafkaEvent;
using System.Threading.Tasks;
using QuickCode.Demo.UserManagerModule.Domain.Enums;

namespace QuickCode.Demo.UserManagerModule.Application.Interfaces.Repositories
{
    public partial interface IKafkaEventRepository : IBaseRepository<KafkaEventDto>
    {
        Task<RepoResponse<KafkaEventDto>> GetByPkAsync(string topicName);
        Task<RepoResponse<List<GetKafkaEventsResponseDto>>> GetKafkaEventsAsync();
        Task<RepoResponse<List<GetActiveKafkaEventsResponseDto>>> GetActiveKafkaEventsAsync();
        Task<RepoResponse<List<GetTopicWorkflowsResponseDto>>> GetTopicWorkflowsAsync(string kafkaEventsTopicName, HttpMethodType apiMethodDefinitionsHttpMethod);
        Task<RepoResponse<List<GetTopicWorkflowsForKafkaEventsResponseDto>>> GetTopicWorkflowsForKafkaEventsAsync(string kafkaEventsTopicName);
        Task<RepoResponse<GetTopicWorkflowsForKafkaEventsResponseDto>> GetTopicWorkflowsForKafkaEventsDetailsAsync(string kafkaEventsTopicName, int topicWorkflowsId);
    }
}