//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by QuickCode. 
// Runtime Version:1.0
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Data.SqlClient;
using QuickCode.Demo.Common.Models;
using QuickCode.Demo.ApartmentManageModule.Domain.Entities;
using QuickCode.Demo.ApartmentManageModule.Application.Dtos.Contact;
using System.Threading.Tasks;
using QuickCode.Demo.ApartmentManageModule.Domain.Enums;

namespace QuickCode.Demo.ApartmentManageModule.Application.Interfaces.Repositories
{
    public partial interface IContactRepository : IBaseRepository<ContactDto>
    {
        Task<RepoResponse<ContactDto>> GetByPkAsync(int id);
        Task<RepoResponse<List<GetActiveContactsResponseDto>>> GetActiveContactsAsync(bool contactsIsActive);
        Task<RepoResponse<GetContactByIdResponseDto>> GetContactByIdAsync(int contactsId);
        Task<RepoResponse<GetContactByPhoneResponseDto>> GetContactByPhoneAsync(string contactsPhone);
        Task<RepoResponse<GetContactByEmailResponseDto>> GetContactByEmailAsync(string? contactsEmail);
        Task<RepoResponse<GetContactByIdentityResponseDto>> GetContactByIdentityAsync(string? contactsIdentityNumber);
        Task<RepoResponse<bool>> CheckContactByPhoneAsync(string contactsPhone);
        Task<RepoResponse<bool>> CheckContactByEmailAsync(string? contactsEmail);
        Task<RepoResponse<long>> GetActiveContactsCountAsync(bool contactsIsActive);
        Task<RepoResponse<List<GetContactsWithPagerResponseDto>>> GetContactsWithPagerAsync(bool contactsIsActive, int? pageNumber = null, int? pageSize = null);
        Task<RepoResponse<List<GetFlatContactsForContactsResponseDto>>> GetFlatContactsForContactsAsync(int contactsId);
        Task<RepoResponse<GetFlatContactsForContactsResponseDto>> GetFlatContactsForContactsDetailsAsync(int contactsId, int flatContactsId);
        Task<RepoResponse<List<GetSiteManagersForContactsResponseDto>>> GetSiteManagersForContactsAsync(int contactsId);
        Task<RepoResponse<GetSiteManagersForContactsResponseDto>> GetSiteManagersForContactsDetailsAsync(int contactsId, int siteManagersId);
    }
}