//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by QuickCode. 
// Runtime Version:1.0
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Data.SqlClient;
using QuickCode.Demo.Common.Models;
using QuickCode.Demo.ApartmentManageModule.Domain.Entities;
using QuickCode.Demo.ApartmentManageModule.Application.Dtos.Flat;
using System.Threading.Tasks;
using QuickCode.Demo.ApartmentManageModule.Domain.Enums;

namespace QuickCode.Demo.ApartmentManageModule.Application.Interfaces.Repositories
{
    public partial interface IFlatRepository : IBaseRepository<FlatDto>
    {
        Task<RepoResponse<FlatDto>> GetByPkAsync(int id);
        Task<RepoResponse<List<GetFlatsByApartmentResponseDto>>> GetFlatsByApartmentAsync(int flatsApartmentId, bool flatsIsActive);
        Task<RepoResponse<List<GetFlatsBySiteResponseDto>>> GetFlatsBySiteAsync(int flatsSiteId, bool flatsIsActive);
        Task<RepoResponse<List<GetFlatsWithContactsResponseDto>>> GetFlatsWithContactsAsync(int flatsId);
        Task<RepoResponse<List<GetVacantFlatsResponseDto>>> GetVacantFlatsAsync(bool flatsIsActive);
        Task<RepoResponse<List<GetRentedFlatsResponseDto>>> GetRentedFlatsAsync(bool flatsIsActive);
        Task<RepoResponse<GetFlatByNumberResponseDto>> GetFlatByNumberAsync(int flatsSiteId, string flatsFlatNumber);
        Task<RepoResponse<List<GetOwnedFlatsResponseDto>>> GetOwnedFlatsAsync(bool flatsIsActive);
        Task<RepoResponse<long>> GetFlatsCountBySiteAsync(int flatsSiteId, bool flatsIsActive);
        Task<RepoResponse<long>> GetFlatsCountByApartmentAsync(int flatsApartmentId, bool flatsIsActive);
        Task<RepoResponse<List<GetFlatContactsForFlatsResponseDto>>> GetFlatContactsForFlatsAsync(int flatsId);
        Task<RepoResponse<GetFlatContactsForFlatsResponseDto>> GetFlatContactsForFlatsDetailsAsync(int flatsId, int flatContactsId);
        Task<RepoResponse<List<GetFlatPaymentsForFlatsResponseDto>>> GetFlatPaymentsForFlatsAsync(int flatsId);
        Task<RepoResponse<GetFlatPaymentsForFlatsResponseDto>> GetFlatPaymentsForFlatsDetailsAsync(int flatsId, int flatPaymentsId);
        Task<RepoResponse<List<GetFlatExpenseInstallmentsForFlatsResponseDto>>> GetFlatExpenseInstallmentsForFlatsAsync(int flatsId);
        Task<RepoResponse<GetFlatExpenseInstallmentsForFlatsResponseDto>> GetFlatExpenseInstallmentsForFlatsDetailsAsync(int flatsId, int flatExpenseInstallmentsId);
        Task<RepoResponse<List<GetUserSiteAccessesForFlatsResponseDto>>> GetUserSiteAccessesForFlatsAsync(int flatsId);
        Task<RepoResponse<GetUserSiteAccessesForFlatsResponseDto>> GetUserSiteAccessesForFlatsDetailsAsync(int flatsId, int userSiteAccessesId);
    }
}