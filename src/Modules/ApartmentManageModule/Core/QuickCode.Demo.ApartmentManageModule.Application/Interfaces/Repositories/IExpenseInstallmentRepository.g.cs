//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by QuickCode. 
// Runtime Version:1.0
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Data.SqlClient;
using QuickCode.Demo.Common.Models;
using QuickCode.Demo.ApartmentManageModule.Domain.Entities;
using QuickCode.Demo.ApartmentManageModule.Application.Dtos.ExpenseInstallment;
using System.Threading.Tasks;
using QuickCode.Demo.ApartmentManageModule.Domain.Enums;

namespace QuickCode.Demo.ApartmentManageModule.Application.Interfaces.Repositories
{
    public partial interface IExpenseInstallmentRepository : IBaseRepository<ExpenseInstallmentDto>
    {
        Task<RepoResponse<ExpenseInstallmentDto>> GetByPkAsync(int id);
        Task<RepoResponse<List<GetExpenseInstallmentsResponseDto>>> GetExpenseInstallmentsAsync(int expenseInstallmentsExpenseId);
        Task<RepoResponse<List<GetUnpaidInstallmentsResponseDto>>> GetUnpaidInstallmentsAsync(int expenseInstallmentsExpenseId, bool expenseInstallmentsPaid);
        Task<RepoResponse<List<GetOverdueInstallmentsResponseDto>>> GetOverdueInstallmentsAsync(bool expenseInstallmentsPaid);
        Task<RepoResponse<List<GetApartmentInstallmentsResponseDto>>> GetApartmentInstallmentsAsync(int expenseInstallmentsSiteId, int expenseInstallmentsApartmentId);
        Task<RepoResponse<List<GetSiteInstallmentsResponseDto>>> GetSiteInstallmentsAsync(int expenseInstallmentsSiteId);
        Task<RepoResponse<List<GetFlatExpenseInstallmentsForExpenseInstallmentsResponseDto>>> GetFlatExpenseInstallmentsForExpenseInstallmentsAsync(int expenseInstallmentsId);
        Task<RepoResponse<GetFlatExpenseInstallmentsForExpenseInstallmentsResponseDto>> GetFlatExpenseInstallmentsForExpenseInstallmentsDetailsAsync(int expenseInstallmentsId, int flatExpenseInstallmentsId);
        Task<RepoResponse<int>> MarkInstallmentAsPaidAsync(int expenseInstallmentsId, MarkInstallmentAsPaidRequestDto updateRequest);
    }
}