//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was generated by QuickCode. 
// Runtime Version:1.0
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Data.SqlClient;
using QuickCode.Demo.Common.Models;
using QuickCode.Demo.ApartmentManageModule.Domain.Entities;
using QuickCode.Demo.ApartmentManageModule.Application.Dtos.FlatPayment;
using System.Threading.Tasks;
using QuickCode.Demo.ApartmentManageModule.Domain.Enums;

namespace QuickCode.Demo.ApartmentManageModule.Application.Interfaces.Repositories
{
    public partial interface IFlatPaymentRepository : IBaseRepository<FlatPaymentDto>
    {
        Task<RepoResponse<FlatPaymentDto>> GetByPkAsync(int id);
        Task<RepoResponse<List<GetPaymentsByFlatYearMonthResponseDto>>> GetPaymentsByFlatYearMonthAsync(int flatPaymentsSiteId, int flatPaymentsFlatId, int flatPaymentsYearId, int flatPaymentsMonthId);
        Task<RepoResponse<List<GetUnpaidPaymentsByFlatResponseDto>>> GetUnpaidPaymentsByFlatAsync(int flatPaymentsSiteId, int flatPaymentsFlatId, bool flatPaymentsPaid);
        Task<RepoResponse<List<GetUnpaidPaymentsBySiteResponseDto>>> GetUnpaidPaymentsBySiteAsync(int flatPaymentsSiteId, bool flatPaymentsPaid);
        Task<RepoResponse<List<GetTotalCashInSafeResponseDto>>> GetTotalCashInSafeAsync(int flatPaymentsSiteId, bool flatPaymentsPaid);
        Task<RepoResponse<List<GetPendingPaymentsByFlatYearMonthResponseDto>>> GetPendingPaymentsByFlatYearMonthAsync(int flatPaymentsSiteId, bool flatPaymentsPaid);
        Task<RepoResponse<List<GetFlatPaymentsByMonthResponseDto>>> GetFlatPaymentsByMonthAsync(int flatPaymentsFlatId, int flatPaymentsYearId, int flatPaymentsMonthId);
        Task<RepoResponse<long>> GetPaymentsCountByFlatAsync(int flatPaymentsFlatId);
        Task<RepoResponse<GetTotalPaidAmountByFlatResponseDto>> GetTotalPaidAmountByFlatAsync(int flatPaymentsFlatId, bool flatPaymentsPaid);
        Task<RepoResponse<long>> GetUnpaidPaymentsCountBySiteAsync(int flatPaymentsSiteId, bool flatPaymentsPaid);
        Task<RepoResponse<int>> MarkPaymentAsPaidAsync(int flatPaymentsId, MarkPaymentAsPaidRequestDto updateRequest);
    }
}